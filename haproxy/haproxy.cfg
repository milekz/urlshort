global
#	log /dev/log	local0
#	log /dev/log	local1 notice
        log 127.0.0.1:514 local0

	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
        tune.ssl.default-dh-param 2048
    # Use "option http-server-close" to enable keep-alive
    # Use "option http-keep-alive" to disable keep-alive
    # Use "http-request set-header Connection keep-alive" to enable keep-alive
    # Use "http-request del-header Connection" to disable keep-alive
#    option http-server-close
#    http-request set-header Connection keep-alive




listen stats
    bind  *:32700
    stats auth bla:blablalbla983679182698t
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    stats refresh 60s


frontend le

        bind                    0.0.0.0:80  alpn h2,http/1.1
	mode http
        default_backend letsencrypt-backend


backend letsencrypt-backend
        mode http
        server letsencrypt 127.0.0.1:8888


frontend linux

        bind                    0.0.0.0:443 ssl crt /etc/haproxy/ssl ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256 no-sslv3 no-tlsv10 no-tlsv11 alpn h2,http/1.1

        mode                    http
        #log                     global
        log 127.0.0.1 local0

#        option                  httpclose
#        timeout client          5000
#        option                  forwardfor
        maxconn                 100000
#        http-request set-header X-Forwarded-Proto https if { ssl_fc }
#        http-request set-header X-HTTPS On if { ssl_fc }
#        http-request set-header X-Port 443 if { ssl_fc }

#        option http-keep-alive
    option http-server-close
    http-request set-header Connection keep-alive



        default_backend node-backend





backend node-backend
#    redirect scheme https if !{ ssl_fc }
    mode http

#    balance roundrobin
    option http-keep-alive
    stick-table type ip size 200k expire 100m
    stick on src
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server node-1 127.0.0.1:3000 check







defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        option forwardfor
        option http-server-close
         retries 3
#        timeout connect 5000
#        timeout client  50000
#        timeout server  50000
timeout connect 5s
timeout client 50s
timeout server 50s


        maxconn 200000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
